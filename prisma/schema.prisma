generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id    Int       @id @default(autoincrement())
  username   String    @unique
  email      String    @unique
  password   String
  created_at DateTime  @default(now())

  projects   Project[]
}

model Project {
  project_id   Int       @id @default(autoincrement())
  project_name String
  description  String?
  created_at   DateTime  @default(now())
  user_id      Int
  user         User      @relation(fields: [user_id], references: [user_id])

  stages       ProjectStage[]
}

model ProjectStage {
  stage_id   Int      @id @default(autoincrement())
  stage_name String
  start_date DateTime
  end_date   DateTime?
  project_id Int

  project    Project @relation(fields: [project_id], references: [project_id])
  gptQueries GptIntegration[]
}

model GptIntegration {
  gpt_session_id Int      @id @default(autoincrement())
  stage_id       Int
  gpt_name       String
  timestamp      DateTime  @default(now())

  stage          ProjectStage @relation(fields: [stage_id], references: [stage_id])

  gptMessage     GptMessage[]
}

model GptMessage {
  message_id  Int            @id @default(autoincrement())
  session_id  Int
  role        String         // "system", "user", or "assistant"
  content     String         // The message content
  timestamp   DateTime       @default(now())

  gptSession  GptIntegration @relation(fields: [session_id], references: [gpt_session_id])
}